/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Persistence;

//import java.awt.List;
import java.util.List;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author bachtiar
 */
public class Uts extends javax.swing.JFrame {

    private final String[] columns = {"Kode Mk", "sks", "nama mata kuliah", "semester ajar"};
    private final ArrayList<String[]> dataList = new ArrayList<>();

    Connection conn;
    Matakuliah matakuliah = new Matakuliah();
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("pboPU");
    EntityManager em = emf.createEntityManager();

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/UTSPBO";
    String user = "postgres";
    String password = "yarde";

    public void tampilPU() {
        em = emf.createEntityManager();

        try {
            DefaultTableModel tbnmhs = new DefaultTableModel(new String[]{"KODE MK", "SKS", "NAMA MK", "SEMESTER AJAR"}, 0);

            List<Matakuliah> mataKuliahList = em.createNamedQuery("Matakuliah.findAll", Matakuliah.class).getResultList();

            for (Matakuliah matakuliah : mataKuliahList) {
                tbnmhs.addRow(new Object[]{
                    matakuliah.getKodemk(),
                    matakuliah.getSks(),
                    matakuliah.getNamamk(),
                    matakuliah.getSemesterajar()
                });
            }

            table.setModel(tbnmhs);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        } 
    }

    public final void refreshModel() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        for (String[] data : dataList) {
            model.addRow(data);
        }
        table.setModel(model);
    }

    /**
     * Creates new form Uts
     */
    public Uts() {
        initComponents();
        try {
            conn = DriverManager.getConnection(koneksi, user, password);

        } catch (SQLException e) {
        }
//        tampilPU();
        this.refreshModel();
        tampilPU();

        updateBtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        isbnLbl = new javax.swing.JLabel();
        tahunLbl = new javax.swing.JLabel();
        judulLbl = new javax.swing.JLabel();
        penerbitLbl = new javax.swing.JLabel();
        sksTxt = new javax.swing.JTextField();
        namaMKTxt = new javax.swing.JTextField();
        semesterTxt = new javax.swing.JTextField();
        kodeMKTXt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        insertBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("NSimSun", 1, 36)); // NOI18N
        jLabel1.setText("MATA KULIAH");

        isbnLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        isbnLbl.setText("Kode MK");

        tahunLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tahunLbl.setText("Nama MK");

        judulLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        judulLbl.setText("SKS");

        penerbitLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        penerbitLbl.setText("Semester Ajar");

        namaMKTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaMKTxtActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jButton1.setText("Cetak");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Upload");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(judulLbl)
                            .addComponent(tahunLbl)
                            .addComponent(penerbitLbl)
                            .addComponent(isbnLbl))
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sksTxt)
                            .addComponent(kodeMKTXt)
                            .addComponent(namaMKTxt)
                            .addComponent(semesterTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(insertBtn)
                            .addComponent(jButton1))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(updateBtn)
                                .addGap(35, 35, 35)
                                .addComponent(deleteBtn)
                                .addGap(45, 45, 45)
                                .addComponent(clearBtn))
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kodeMKTXt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isbnLbl))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sksTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(judulLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tahunLbl)
                            .addComponent(namaMKTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(semesterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(penerbitLbl)))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateBtn)
                            .addComponent(deleteBtn)
                            .addComponent(clearBtn)
                            .addComponent(insertBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        kodeMKTXt.setText("");
        sksTxt.setText("");
        namaMKTxt.setText("");
        semesterTxt.setText("");
        kodeMKTXt.setEditable(true);
        updateBtn.setEnabled(false);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        String isbn = kodeMKTXt.getText();
        String judul = sksTxt.getText();
        String tahun = namaMKTxt.getText();
        String penerbit = semesterTxt.getText();
        if (isbn.trim().isEmpty() && judul.trim().isEmpty() && tahun.trim().isEmpty() && penerbit.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan data anda terlebih dahulu");

        } else if (isbn.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Kode terlebih dahulu");
        } else if (judul.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan SKS terlebih dahulu");
        } else if (tahun.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan Nama mata kulliah terlebih dahulu");
        } else if (penerbit.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukkan semester ajar terlebih dahulu");
        } else {
            em.getTransaction().begin();
            matakuliah.setKodemk(kodeMKTXt.getText());
            matakuliah.setNamamk(namaMKTxt.getText());
            matakuliah.setSemesterajar(semesterTxt.getText());
            matakuliah.setSks(sksTxt.getText());
            em.persist(matakuliah);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, "data berhasil ditambahkan");
            tampilPU();
            
            kodeMKTXt.setText("");
            sksTxt.setText("");
            namaMKTxt.setText("");
            semesterTxt.setText("");
            kodeMKTXt.setEditable(true);
            updateBtn.setEnabled(false);

        }
    }//GEN-LAST:event_insertBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        String isbn = kodeMKTXt.getText();
        if (isbn.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Error abangkuh", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            em.getTransaction().begin();

            matakuliah = em.find(Matakuliah.class, kodeMKTXt.getText());
            em.remove(matakuliah);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(this, "data berhasil dihapus");
            tampilPU();
            kodeMKTXt.setText("");
            sksTxt.setText("");
            namaMKTxt.setText("");
            semesterTxt.setText("");
            kodeMKTXt.setEditable(true);
            updateBtn.setEnabled(false);

        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String isbn = kodeMKTXt.getText();
        String judul = sksTxt.getText();
        String tahun = namaMKTxt.getText();
        String penerbit = semesterTxt.getText();

        if (isbn.trim().isEmpty() && judul.trim().isEmpty() && tahun.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan data anda terlebih dahulu");

        } else if (isbn.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan isbn anda terlebih dahulu");
        } else if (judul.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan judul anda terlebih dahulu");
        } else if (tahun.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "masukan tahun anda terlebih dahulu");
        } else {
            em.getTransaction().begin();

            matakuliah = em.find(Matakuliah.class, kodeMKTXt.getText());

            matakuliah.setKodemk(kodeMKTXt.getText());
            matakuliah.setNamamk(namaMKTxt.getText());
            matakuliah.setSemesterajar(semesterTxt.getText());
            matakuliah.setSks(sksTxt.getText());
            em.persist(matakuliah);

            em.getTransaction().commit();

            JOptionPane.showMessageDialog(this, "Update Berhasil");
            tampilPU();
            kodeMKTXt.setText("");
            sksTxt.setText("");
            namaMKTxt.setText("");
            semesterTxt.setText("");
            kodeMKTXt.setEditable(true);
            updateBtn.setEnabled(false);

        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int selectedRow = table.getSelectedRow();
        if (selectedRow != -1) {
            String isbn = table.getValueAt(selectedRow, 0).toString();
            String judul = table.getValueAt(selectedRow, 1).toString();
            String tahun = table.getValueAt(selectedRow, 2).toString();
            String penerbit = table.getValueAt(selectedRow, 3).toString();

            kodeMKTXt.setText(isbn);
            kodeMKTXt.setEditable(false);
            sksTxt.setText(judul);
            namaMKTxt.setText(tahun);
            semesterTxt.setText(penerbit);
            updateBtn.setEnabled(true);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void namaMKTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaMKTxtActionPerformed
    }//GEN-LAST:event_namaMKTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            JasperReport reports;
            String path = "src\\Upload\\report1.jasper";
            reports = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint print = JasperFillManager.fillReport(path, null, conn);
            JasperViewer view = new JasperViewer(print, false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);
            kodeMKTXt.setText("");
            sksTxt.setText("");
            namaMKTxt.setText("");
            semesterTxt.setText("");
            kodeMKTXt.setEditable(true);
        } catch (JRException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File filePilihan = jfc.getSelectedFile();
            System.out.println("yang dipilih : " + filePilihan.getAbsolutePath());
            try {
                BufferedReader br = new BufferedReader(new FileReader(filePilihan));
                String baris = new String("");
                String pemisah = ",";
                while ((baris = br.readLine()) != null) //returns a Boolean value
                {
                    String[] dataMhs = baris.split(pemisah);
                    String kodeMk = dataMhs[0];
                    String sks = dataMhs[1];
                    String namaMK = dataMhs[2];
                    String semester = dataMhs[3];

                    if (!kodeMk.isEmpty() && !sks.isEmpty() && !namaMK.isEmpty() && !semester.isEmpty()) {
                        em.getTransaction().begin();
                        matakuliah.setKodemk(kodeMk);
                        matakuliah.setNamamk(namaMK);
                        matakuliah.setSemesterajar(semester);
                        matakuliah.setSks(sks);
                        em.persist(matakuliah);
                        em.getTransaction().commit();
                        JOptionPane.showMessageDialog(this, "data berhasil ditambahkan");

                        tampilPU();
                    }
                }
            } catch (FileNotFoundException ex) {
            } catch (IOException ex) {
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Uts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Uts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel isbnLbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judulLbl;
    private javax.swing.JTextField kodeMKTXt;
    private javax.swing.JTextField namaMKTxt;
    private javax.swing.JLabel penerbitLbl;
    private javax.swing.JTextField semesterTxt;
    private javax.swing.JTextField sksTxt;
    private javax.swing.JTable table;
    private javax.swing.JLabel tahunLbl;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
